@using AIS;
@using System.Diagnostics;



@{
    var param = new RotaryMag.Parametres();
    var item = Yemon.dnn.Helpers.GetItem("RotaryMagParametres", 0);
    bool saved = false;
    bool synchro = false;
    string synchro_result = "";
    string nim = "" + Request["nim"];
    if (nim == "")
    {
        nim = "5604888";
    }


    if (item != null)
    {
        param = Yemon.dnn.Functions.Deserialize<RotaryMag.Parametres>("" + item); ;
    }
    if (param.dico == null)
    {
        param.dico = new RotaryMag.Dico();
        param.dico.district_id = AIS.Const.DISTRICT_ID;
    }

    DotNetNuke.Security.Roles.RoleController roleController = new DotNetNuke.Security.Roles.RoleController();
    var admins = roleController.GetUsersByRole(Dnn.Portal.PortalId, Const.ROLE_ADMIN_DISTRICT);

    if (IsPost)
    {
        if (("" + Request["bt_synchro"]) == "synchro")
        {
            synchro_result = RotaryMagHelper.Synchro();
            synchro = true;
        }
        else if (("" + Request["bt_synchro"]) == "import")
        {
            synchro_result = RotaryMagHelper.Synchro(true,false,false);
            synchro = true;
        }
        else if (("" + Request["bt_synchro"]) == "analyser")
        {
            synchro_result = RotaryMagHelper.Synchro(false, true, false);
            synchro = true;
        }
        else if (("" + Request["bt_synchro"]) == "maj")
        {
            synchro_result = RotaryMagHelper.Synchro(false, false, true);
            synchro = true;
        }
        else if (("" + Request["bt_synchro"]) == "bt_synchro_initiale")
        {
            synchro_result = RotaryMagHelper.SynchroInitialeRM2RODI();
            synchro = true;
        }
        else if (("" + Request["bt_correction_pays"]) == "bt_correction_pays")
        {
            synchro_result = RotaryMagHelper.CorrectionCodesPays();
            synchro = true;
        }
    }

    var RotaryMagImportMembres = Yemon.dnn.Helpers.GetItemMeta("RotaryMagImportMembres");
    var RotaryMagAnalyseMembres = Yemon.dnn.Helpers.GetItemMeta("RotaryMagAnalyseMembres");
    var RotaryMagMajMembres = Yemon.dnn.Helpers.GetItemMeta("RotaryMagMajMembres");

    if (IsPost)
    {
        if (("" + Request["bt_download"]) == "lastimportjson")
        {
            byte[] bytes = System.Text.Encoding.UTF8.GetBytes("" + RotaryMagImportMembres["value"]);
            Media media = new Media
            {
                content = bytes,
                content_size = bytes.Length,
                content_type = "text/json",
                name = ((DateTime)RotaryMagImportMembres["dtlastupdate"]).ToString("yyyyMMdd.hhmmss") + ".ImportMembresRotaryMag.json"
            };
            string id = Guid.NewGuid().ToString();
            HttpContext.Current.Session[id] = media;
            HttpContext.Current.Response.Redirect("/AIS/download.aspx?id=" + id);
            return;
        }
        else if (("" + Request["bt_download"]) == "lastimportexcel")
        {
            System.Data.DataTable table = Yemon.dnn.DataMapping.ExecSql("select * from " + Const.TABLE_PREFIX + "import_rotarymag");
            if (table != null)
            {
                byte[] bytes = Yemon.dnn.SIPro.SIPro.DataTablesToExcel(0, new List<System.Data.DataTable> { table });

                Media media = new Media
                {
                    content = bytes,
                    content_size = bytes.Length,
                    content_type = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    name = ((DateTime)RotaryMagImportMembres["dtlastupdate"]).ToString("yyyyMMdd.hhmmss") + ".ImportMembresRotaryMag.xlsx"
                };

                string id = Guid.NewGuid().ToString();
                HttpContext.Current.Session[id] = media;
                HttpContext.Current.Response.Redirect("/AIS/download.aspx?id=" + id);
                return;
            }
            <div class="alert alert-danger">Erreur de sélection des données</div>


        }
        else if (("" + Request["bt_download"]) == "lastanalyse")
        {
            byte[] bytes = System.Text.Encoding.UTF8.GetBytes("" + RotaryMagAnalyseMembres["value"]);
            Media media = new Media
            {
                content = bytes,
                content_size = bytes.Length,
                content_type = "text/plain",
                name = ((DateTime)RotaryMagAnalyseMembres["dtlastupdate"]).ToString("yyyyMMdd.hhmmss") + ".AnalyseMembresRotaryMag.txt"
            };
            string id = Guid.NewGuid().ToString();
            HttpContext.Current.Session[id] = media;
            HttpContext.Current.Response.Redirect("/AIS/download.aspx?id=" + id);
            return;
        }
        else if (("" + Request["bt_download"]) == "lastmaj")
        {
            byte[] bytes = System.Text.Encoding.UTF8.GetBytes("" + RotaryMagMajMembres["value"]);
            Media media = new Media
            {
                content = bytes,
                content_size = bytes.Length,
                content_type = "text/txt",
                name = ((DateTime)RotaryMagMajMembres["dtlastupdate"]).ToString("yyyyMMdd.hhmmss") + ".MajMembresRotaryMag.txt"
            };
            string id = Guid.NewGuid().ToString();
            HttpContext.Current.Session[id] = media;
            HttpContext.Current.Response.Redirect("/AIS/download.aspx?id=" + id);
            return;
        }

        else if (("" + Request["bt_save"]) == "save")
        {
            param.jwt_url_login = "" + Request["jwt_url_login"];
            param.jwt_url_extendtoken = "" + Request["jwt_url_extendtoken"];
            param.url_membres = "" + Request["url_membres"];
            param.url_annuaire = "" + Request["url_annuaire"];
            param.jwt_username = "" + Request["jwt_username"];

            int user_id_apiaccess = 0;
            int.TryParse("" + Request["user_id_apiaccess"], out user_id_apiaccess);
            param.user_id_apiaccess = user_id_apiaccess;

            param.allowed_hosts = ("" + Request["allowed_hosts"]).Replace(" ", "").Replace(Environment.NewLine, ",").Replace(";", ",");


            if (("" + Request["jwt_password"]) != "++++++++++")
            {
                param.jwt_password = "" + Request["jwt_password"];
            }

            if (("" + Request["dico"]) != "")
            {
                int userid = 0;
                int.TryParse("" + Request["dico"], out userid);
                if (userid > 0)
                {
                    Member member = DataMapping.GetMemberByUserID(userid);
                    if (member != null)
                    {
                        param.dico.email = member.email;
                        param.dico.nim = member.nim;
                        param.dico.nom = member.surname;
                        param.dico.prenom = member.name;
                        param.dico.cric = member.cric;
                        param.dico.nom_club = member.club_name;
                        param.dico.telephone = member.gsm;

                    }
                }
            }

            Yemon.dnn.Helpers.SetItem("RotaryMagParametres", Yemon.dnn.Functions.Serialize(param), "", keephistory: false);
            saved = true;

        }

    }
}
<style>
    .panel-heading .accordion-toggle:after {
        /* symbol for "opening" panels */
        font-family: 'Glyphicons Halflings'; /* essential for enabling glyphicon */
        content: "\e114"; /* adjust as needed, taken from bootstrap.css */
        float: right; /* adjust as needed */
        color: grey; /* adjust as needed */
    }

    .panel-heading .accordion-toggle.collapsed:after {
        /* symbol for "collapsed" panels */
        content: "\e080"; /* adjust as needed, taken from bootstrap.css */
    }
</style>
<div class="panel-group" id="accordion">
    <div class="panel panel-default " >
        <div class="panel-heading"><a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion" href="#collapse1">Configuration</a></div>
        <div id="collapse1" class="panel-collapse collapse">
             <div class="panel-body">
            <h2>API Rotary Mag</h2>
            <div class="form-group">
                <label for="jwt_url_login">URL JWT Login</label>
                <input type="text" class="form-control" name="jwt_url_login" value="@param.jwt_url_login" />
            </div>
            <div class="form-group">
                <label for="jwt_url_extendtoken">URL JWT ExtendToken</label>
                <input type="text" class="form-control" name="jwt_url_extendtoken" value="@param.jwt_url_extendtoken" />
            </div>
            <div class="form-group">
                <label for="url_membres">URL Membres</label>
                <input type="text" class="form-control" name="url_membres" value="@param.url_membres" />
            </div>
            <div class="form-group">
                <label for="url_annuaire">URL Annuaire</label>
                <input type="text" class="form-control" name="url_annuaire" value="@param.url_annuaire" />
            </div>
            <div class="form-group">
                <label for="jwt_username">JWT Username</label>
                <input type="text" class="form-control" name="jwt_username" value="@param.jwt_username" />
            </div>
            <div class="form-group">
                <label for="jwt_password">JWT Password</label>
                <input type="password" class="form-control" name="jwt_password" value="++++++++++" />
            </div>
            <h2>API RODI</h2>
            <div class="alert alert-info">
                <h2>Authentification JWT :</h2>
                <ul>
                    <li>
                        <h3>Login : <a href="@Const.DISTRICT_URL/desktopmodules/jwtauth/api/mobile/login" target="_blank">/desktopmodules/jwtauth/api/mobile/login</a></h3>
                        <div>
                            <pre>POST @Const.DISTRICT_URL/desktopmodules/jwtauth/api/mobile/login HTTP/1.1
Content-Type: application/json; charset=utf-8   

{"u":"username","p":"password"}</pre>
                        </div>
                        <p>réponse :</p>
                        <div>
                            <pre>{
    "userId": 123,
    "displayName": "RotaryMag API User",
    "accessToken": "#accesstoken#",
    "renewalToken": "#renewaltoken#"
}</pre>
                        </div>
                    </li>
                    <li>
                        <h3>ExtendToken : <a href="@Const.DISTRICT_URL/desktopmodules/jwtauth/api/mobile/extendtoken" target="_blank">/desktopmodules/jwtauth/api/mobile/extendtoken</a></h3>
                        <div>
                            <pre>POST @Const.DISTRICT_URL/desktopmodules/jwtauth/api/mobile/extendtoken HTTP/1.1
Content-Type: application/json; charset=utf-8 
Authorization: Bearer #accesstoken#

{
    "rToken":"#renewaltoken#"
    
}</pre>
                        </div>
                        <p>réponse :</p>
                        <div>
                            <pre>{
    "userId": 123,
    "displayName": "RotaryMag API User",
    "accessToken": "#newaccesstoken#",
    "renewalToken": "#newrenewaltoken#"
}</pre>
                        </div>
                    </li>
                    <li>
                        <h3>Logout : <a href="@Const.DISTRICT_URL/desktopmodules/jwtauth/api/mobile/logout" target="_blank">/desktopmodules/jwtauth/api/mobile/logout</a></h3>
                        <div>
                            <pre>GET @Const.DISTRICT_URL/desktopmodules/jwtauth/api/mobile/logout HTTP/1.1
Content-Type: application/json; charset=utf-8   
Authorization: Bearer #accesstoken#
</pre>
                        </div>
                        <p>réponse :</p>
                        <div>
                            <pre>{
    "success": true
}</pre>
                        </div>
                    </li>
                </ul>
                <h2>Points d'entrée de l'api (GET) :</h2>
                <ul>
                    <li>Hello : <a href="@Const.DISTRICT_URL/desktopmodules/ais/api/rotarymag/hello" target="_blank">/desktopmodules/ais/api/rotarymag/hello</a></li>
                    <li>Clubs : <a href="@Const.DISTRICT_URL/desktopmodules/ais/api/rotarymag/hello" target="_blank">/desktopmodules/ais/api/rotarymag/clubs</a></li>
                    <li>Membres : <a href="@Const.DISTRICT_URL/desktopmodules/ais/api/rotarymag/hello" target="_blank">/desktopmodules/ais/api/rotarymag/membres</a></li>
                    <li>Dico : <a href="@Const.DISTRICT_URL/desktopmodules/ais/api/rotarymag/hello" target="_blank">/desktopmodules/ais/api/rotarymag/dico</a></li>
                    <li>Affectations : <a href="@Const.DISTRICT_URL/desktopmodules/ais/api/rotarymag/hello" target="_blank">/desktopmodules/ais/api/rotarymag/affectations</a></li>
                </ul>
            </div>
            <div class="form-group">
                <label for="dico">DICO</label>
                <select name="dico" class="form-control">
                    <option>--- Choisir ---</option>
                    @foreach (var m in admins)
                    {
                        <option value="@m.UserID" @if (param.dico.email == m.Email) { @Html.Raw("selected") }>@(m.DisplayName)</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="user_id_apiaccess">User Id Accès API</label>
                <input type="number" class="form-control" name="user_id_apiaccess" min="1" step="1" max="99999" value="@param.user_id_apiaccess" />
                <div class="alert alert-warning">
                    Créez un utilisateur spécifique pour l'api avec les droits minimums et interdisez lui l'accès à l'espace membre
                </div>
            </div>

            <div class="form-group">
                <label for="allowed_hosts">IPs et hôtes autorisés (séparés par virgules)</label>
                <input type="text" class="form-control" name="allowed_hosts" value="@param.allowed_hosts" />
                <div class="alert alert-warning">
                    Si le champ est vide, l'accès est interdit a tout le monde
                </div>
            </div>


            <div class="from-group">
                <button type="submit" name="bt_save" value="save" class="btn btn-primary">Valider</button>&nbsp;
            </div>

            @{
                if (saved)
                {
                    <div class="pe-spacer size10"></div>
                    <div class="alert alert-success">Paramètres enregistrés</div>
                }
            }
            </div>
        </div>
    </div>
</div>
    <div class="panel panel-default">
        <div class="panel-heading">Synchronisation RotaryMag > District :</div>
        <div class="panel-body">
            <div class="from-group">
                <div class="col-sm-3">
                    <button type="submit" name="bt_synchro" value="bt_synchro_initiale" class="btn btn-default">Synchro initiale champs RM > RODI</button>
                </div>
                <div class="col-sm-9">
                    <span class="small">phf, legion_honneur, ordre_merite, palmes_academiques, medaille_militaire, croix_guerre, autre_decorations, pro_secteur_activite, professionnal_company, no_adr_pro, annee_entree_club, job, fonction</span>

                </div>
            </div>
            <div class="from-group">
                <div class="col-sm-3">
                    <button type="submit" name="bt_correction_pays" value="bt_correction_pays" class="btn btn-default">Correction pays</button>
                </div>
                <div class="col-sm-9">


                </div>
            </div>
            <div class="pe-spacer size20"></div>
            <div class="from-group">

                <button type="submit" name="bt_synchro" value="synchro" class="btn btn-primary">Synchronisation complète (import + analyse + maj)</button>
                <button type="submit" name="bt_synchro" value="import" class="btn btn-default">Importer membres</button>
                <button type="submit" name="bt_synchro" value="analyser" class="btn btn-default">Analyser membres</button>
                <button type="submit" name="bt_synchro" value="maj" class="btn btn-default">Maj membres</button>
            </div>
            <div class="pe-spacer size10"></div>
            @if (RotaryMagImportMembres != null)
            {

                <div>
                    <div>
                        <span>Dernier import : @(""+RotaryMagImportMembres["dtlastupdate"]+"")</span>
                        @if (RotaryMagAnalyseMembres != null)
                        {
                            <span>, dernière analyse : @(""+RotaryMagAnalyseMembres["dtlastupdate"]+"")</span>
                        }
                        @if (RotaryMagMajMembres != null)
                        {
                            <span>, dernière maj : @("" + RotaryMagMajMembres["dtlastupdate"] + "")</span>
                        }
                    </div>
                    <div class="pe-spacer size10"></div>
                    <div>Télécharger :</div>
                    <ul>

                        <li>
                            <span>données des membres reçues : </span><button type="submit" formtarget="_blank" name="bt_download" value="lastimportjson" class="btn btn-link">format json</button>
                            <button type="submit" formtarget="_blank" name="bt_download" value="lastimportexcel" class="btn btn-link">format excel</button>
                        </li>
                        <li>
                            <span>rapport analyse : </span><button type="submit" formtarget="_blank" name="bt_download" value="lastanalyse" class="btn btn-link">format txt</button>
                        </li>
                        <li>
                            <span>rapport maj : </span><button type="submit" formtarget="_blank" name="bt_download" value="lastmaj" class="btn btn-link">format txt</button>
                        </li>
                    </ul>
                </div>
            }
            else
            {
                <em>Aucun import membres pour le moment...</em>
            }

            @{
                if (synchro)
                {
                    <div class="pe-spacer size10"></div>
                    if (synchro_result.ToLower().Contains("erreur"))
                    {
                        <div class="text-danger">Traitement effectué ... avec erreur(s) !<br /><pre>@synchro_result</pre></div>
                    }
                    else
                    {
                        <div class="text-success">Traitement effectué<br /><pre>@synchro_result</pre></div>
                    }


                }
            }

        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading">Test annuaire RotaryMag :</div>
        <div class="panel-body">
            <div class="form-group">
                <label for="nim">NIM membre</label>
                <input type="text" class="form-control" name="nim" value="@nim" />
            </div>
            <div class="form-group">
                <label for="search">Recherche</label>
                <input type="text" class="form-control" name="search" value="@Request["search"]" />
            </div>
            <div class="from-group">
                <button type="submit" name="bt_search" value="search" class="btn btn-primary">Recherche</button>
            </div>


            @{

                if (("" + Request["bt_search"]) == "search")
                {
                    int n = 0;
                    int.TryParse("" + Request["nim"], out n);
                    string search = "" + Request["search"];
                    var membres = RotaryMagHelper.Annuaire(n, search);
                    <div class="pe-spacer size10"></div>
                    <div>
                        @if (membres == null)
                        {
                            <div class="alert alert-warning">Aucun résultat</div>
                        }
                        else
                        {
                            <div>@membres.Count membre(s) trouvé(s) :</div>

                            <div class="panel-body">
                                <pre>
                                    @foreach (var membre in membres)
                                    {
                                        @membre.nom @membre.prenom @membre.email @membre.gsm @("("+membre.nom_club+" : "+ membre.district+")"+Environment.NewLine)
                                    }
                                </pre>
                            </div>

                        }
                    </div>
                }
            }

        </div>

    </div>
   