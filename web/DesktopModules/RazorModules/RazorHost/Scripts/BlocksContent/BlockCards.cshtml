<script type="text/x-template" id="blockcards-template">
    <div v-if="c">
        <div v-if="editing" class="bc-editing">
            <button type="button" v-on:click="cancel()" class="btn btn-close"><i class="fa fa-times"></i></button>

            <span class="bc-label">Titre :</span>
            <input type="text" v-model="e.Title" class="form-control" />
            <span class="bc-label">Description :</span>
            <textarea rows="3" v-model="e.Description" class="form-control" ></textarea>

            <span class="bc-label">Couleur :</span>
            <div class="form-control color-picker">
                <span v-for="(t,i) in colorsList">
                    <label :for="'color'+i" :style="{'background-color': t[0],color:t[1]}"> T </label>
                    <input type="radio" v-model="color" name="color" :id="'color'+i" :value="t" />
                </span>
            </div>

            <fieldset v-for="(n,j) in e.List">
                <legend class="bc-label">Carte n°{{(j+1)}} :</legend>

                <div>
                    <small>Titre</small>
                    <input type="text" v-model="n.Title" class="form-control" />
                </div>

                <div>
                    <small>Description</small>
                    <textarea rows="3" v-model="n.Description" class="form-control"></textarea>
                </div>

                <small>Image</small>
                <div class="bulles-choice">
                    <div v-for="(t,i) in imageList" class="bullets">
                        <label :for="'image'+j+':'+i"><img :src="t" width="120" /></label>
                        <input type="radio" v-model="n.Image" :name="'image'+j" :id="'image'+j+':'+i" :value="t" />
                    </div>
                </div>
                <span class="bc-label">Bouton :</span>
                <div class="form-control">
                    <label :for="'roc0:'+j" class="radio-inline"><input type="radio" v-model="redirectOnClick[j]" :value="false" :name="'roc0:'+j" :id="'roc0:'+j" />Non</label>
                    <label :for="'roc1:'+j" class="radio-inline"><input type="radio" v-model="redirectOnClick[j]" :value="true" :name="'roc1:'+j" :id="'roc1:'+j" />Oui</label>

                </div>
                <div v-if="redirectOnClick[j]">
                    <small>Libellé&nbsp;du&nbsp;bouton</small>
                    <input type="text" class="form-control" v-model="n.Uri.Label" />
                </div>
                <div v-if="redirectOnClick[j]">
                    <small>Url&nbsp;de&nbsp;destination</small>
                    <input type="text" v-model="n.Uri.Href" class="form-control" />
                    <div class="form-inline">
                        <label :for="'target'+j+':0'" class="radio-online"><input type="radio" v-model="n.Uri.Target" value="" :name="'target'+j" :id="'target'+j+':0'" />Même fenêtre</label>
                        <label :for="'target'+j+':1'" class="radio-online"><input type="radio" v-model="n.Uri.Target" value="_blank" :name="'target'+j" :id="'target'+j+':1'" />Nouvelle fenêtre</label>
                    </div>
                </div>





                <button type="button" class="btn btn-danger btn-sm" v-on:click="sup(n)">Supprimer</button>
            </fieldset>
        
            <div>
                <button  v-if="e.List.length<3" type="button" class="btn btn-link btn-sm" v-on:click="add()">Ajouter</button>
            </div>
            <div style="text-align:center;margin-top:1em;">
                <button type="button" v-on:click="validate()" class="btn btn-primary">Valider</button>
            </div>
        </div>

        <div v-if="!editing">
            <div class="content-wrapper" :class="cardsClass()">
                <div class="card-header">                      
                    <h3 :style="{color:c.BGColor}">{{c.Title}}</h3>
                    <pre class="lead">{{c.Description}}</pre>
                </div>

                <div class="grid centered" v-if="c.List">
                    <div class="transparent-card" v-for="i in c.List">
                        <img :src="i.Image" :alt="i.Title">
                        <div class="news-title">
                            <span>{{i.Title}}</span>
                            <pre>{{i.Description}}</pre>
                        </div>

                        <a v-if="i.Uri" :style="{'background-color': c.BGColor,color:c.Color}" :href="i.Uri.Href" :target="i.Uri.Target" class="btn btn-xl">{{i.Uri.Label}}</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</script>

<script>
    if (typeof BlockCards == 'undefined')
    {

        BlockCards =  {
            template: '#blockcards-template',
            name: 'BlockCards',
            props: [
                'content'
            ],
            emits: [
                'changed',
                'cancel'
            ],
            data() {
                return {

                    redirectOnClick:[],
                    colorsList: BGCOLORSLIST,   
                    imageList: BGCARDSIMAGELIST,
                    editing: false,
                    color:null,
                    c: {

                    },                   
                    e: {
                        
                    },



                }
                        },
            components: {

            },
            methods: {
                cardsClass() {
                    if(!this.c || !this.c.List)
                        return '';
                    return "cards-col-"+this.c.List.length;
                },
                add() {
                    this.e.List.push({
                        Title: 'Titre',
                        Title2: 'Sous titre',
                        Image: this.imageList[0],
                        Uri: {
                            Href: 'https://www.rotary.org',
                            Target: '_blank',
                            Label: 'Bouton...'
                        }

                    });

                },
                sup(u) {
                    this.e.List = this.e.List.filter(e => e != u);
                },
                edit() {
                    this.editing = true;
                    this.e = JSON.parse(JSON.stringify(this.c));
                    var i = this.colorsList.findIndex(c => c[0] == this.e.BGColor);
                    if (i > -1)
                        this.color = this.colorsList[i];                       
                    else
                        this.color = this.colorsList[0];

                    for (var i = 0; i < this.e.List.length; i++) {
                        this.redirectOnClick[i] = this.e.List[i].Uri != null;
                        if (!this.e.List[i].Uri)
                            this.e.List[i].Uri = { Href: '', Target: '', Label: 'Plus de détail' };
                    }

                },
                validate() {
                    this.c = JSON.parse(JSON.stringify(this.e));
                    this.c.BGColor = this.color[0];
                    this.c.Color = this.color[1];
                    for (var i = 0; i < this.e.List.length; i++) {
                        if (!this.redirectOnClick[i]) {
                            this.c.List[i].Uri = null;
                        }
                    }

                    this.editing = false;
                    this.onChange();
                },
                cancel() {
                    this.editing = false;
                    this.$emit('cancel');
                },
                onChange() {
                    this.$emit('changed', this.c);
                },


            },
            mounted()
            {
                        this.c = this.content;
            }
         }
    }


</script>