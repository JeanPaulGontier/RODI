@using System.Collections;
@using System.IO;
@using System.Collections.Generic;
@using System.Data.SqlClient;
@using DotNetNuke.Entities.Tabs;
@using System.Data;
@using System.Linq;
@using DotNetNuke.Common;
@using DotNetNuke.Entities.Users;
@using DotNetNuke.Web.Api;
@using DotNetNuke;
@using DotNetNuke.Services.Localization;
@using DotNetNuke.Entities.Modules;
@using DotNetNuke.Security.Permissions;
@using AIS;
@{



    var CDV = Yemon.dnn.Functions.CDV;


    bool print = !("" + Request["print"]).Equals("");
    bool calendar = !("" + Request["calendar"]).Equals("");
    bool export = ("" + Request["export"]) == "true";

    string link = "" + Request["m"];
    if (link == "")
    {
        return;
    }
    SqlCommand sql = new SqlCommand("SELECT * FROM [ais_meetings] WHERE SUBSTRING(LOWER(CAST(guid as VARCHAR(36))), 10, 9) = @link");
    sql.Parameters.AddWithValue("link", link);
    Meeting meeting = Yemon.dnn.DataMapping.ExecSqlFirst<Meeting>(sql);
    if (meeting == null)
    {
        return;
    }


    Club club = DataMapping.GetClub(meeting.cric);
    if (club == null)
    {
        return;
    }
    string blocksserial = "" + Yemon.dnn.Helpers.GetItem("blockscontent:" + meeting.guid);
    List<Block> blocks = new List<Block>();
    if (blocksserial != "")
    {
        blocks = (List<Block>)Yemon.dnn.Functions.Deserialize(blocksserial, typeof(List<Block>));
    }

    var libPath = TabController.CurrentPage.SkinPath + "echoppe/";
    PageData["appID"] = "app" + Dnn.Module.ModuleID;
    PageData["PortalId"] = Dnn.Portal.PortalId;
    PageData["moduleID"] = Dnn.Module.ModuleID;
    PageData["HTML"] = Html;

    PageData["blocksSuffix"] = "" + meeting.guid;
    var userInfo = UserController.Instance.GetCurrentUserInfo();

    var useridguid = "" + Request["useridguid"];
    if (useridguid == "")
    {
        if (userInfo.UserID > 0)
        {
            useridguid = Yemon.dnn.Functions.CalculateMD5Hash("" + userInfo.UserID);
        }
        else
        {
            useridguid = Guid.NewGuid().ToString().Replace("-", "");
        }

    }





    if (export)
    {
        DataTable tableexport = Yemon.dnn.DataMapping.ExecSql(new SqlCommand("SELECT firstname AS 'Prenom',lastname as 'Nom',comment as 'Commentaire',presence as 'Presence',dtlastupdate as 'Date' FROM ais_meetings_users WHERE meetingguid='" + meeting.guid + "' ORDER BY lastname,firstname"));
        List<DataTable> tables = new List<DataTable>();
        tables.Add(tableexport);

        Media media = DataMapping.ExportDataTablesToXLS(tables, Functions.ClearFileName(meeting.name) + ".xlsx", Aspose.Cells.SaveFormat.Xlsx);
        string guidexport = Guid.NewGuid().ToString();
        Session[guidexport] = media;
        Response.Redirect(Const.MEDIA_DOWNLOAD_URL + "?id=" + guidexport);
        return;
    }
    if (calendar)
    {
        Media media = new Media();
        string guidexport = Guid.NewGuid().ToString();

        // Format iCalendar
        var ical = "BEGIN:VCALENDAR"+Environment.NewLine+
        "PRODID:-//Rotary//D"+Const.DISTRICT_ID+"//FR"+Environment.NewLine+
        "VERSION:2.0"+Environment.NewLine+

         //"CALSCALE:GREGORIAN"+Environment.NewLine+
         "BEGIN:VEVENT"+Environment.NewLine+
         "CLASS:PUBLIC"+Environment.NewLine+
         "CREATED:"+meeting.dtlastupdate.ToUniversalTime().ToString("yyyyMMddTHHmm00Z")+""+Environment.NewLine+
         "DESCRIPTION:Pour voir le détail de la réunion : \\n"+Const.DISTRICT_URL+"/oukikan?m="+link+Environment.NewLine+
         "LAST-MODIFIED:"+meeting.dtlastupdate.ToUniversalTime().ToString("yyyyMMddTHHmm00Z")+""+Environment.NewLine+
         "PRIORITY:5"+Environment.NewLine+
         "SEQUENCE:0"+Environment.NewLine+
         "SUMMARY:"+(meeting.name).Replace(Environment.NewLine, "\\n")+""+Environment.NewLine+
         "TRANSP:OPAQUE"+Environment.NewLine+
         "UID:"+meeting.guid.ToString()+""+Environment.NewLine+
         "DTSTAMP:"+meeting.dtlastupdate.ToUniversalTime().ToString("yyyyMMddTHHmm00Z")+""+Environment.NewLine+
         //"DTSTART:TZID=Romance Standard Time:"+meeting.dtstart.ToUniversalTime().ToString("yyyyMMddTHHmm00")+""+Environment.NewLine+
         //"DTEND:TZID=Romance Standard Time:"+meeting.dtend.ToUniversalTime().ToString("yyyyMMddTHHmm00")+""+Environment.NewLine+
         "DTSTART:"+meeting.dtstart.ToUniversalTime().ToString("yyyyMMddTHHmm00Z")+""+Environment.NewLine+
         "DTEND:"+meeting.dtend.ToUniversalTime().ToString("yyyyMMddTHHmm00Z")+""+Environment.NewLine+
         
         "BEGIN:VALARM\r\nACTION:DISPLAY\r\nDESCRIPTION:Reminder\r\nTRIGGER:-PT15M\r\nEND:VALARM\r\nEND:VEVENT\r\nBEGIN:VTIMEZONE\r\n"+

         "CATEGORIES:Rotary"+Environment.NewLine+
         "LOCATION:"+club.name+""+Environment.NewLine+
         "URL:"+Const.DISTRICT_URL+"/oukikan?m="+link+Environment.NewLine+
         "END:VEVENT"+Environment.NewLine+


        //"BEGIN:VTIMEZONE"+Environment.NewLine+
        //"TZID:Romance Standard Time"+Environment.NewLine+
        //"TZNAME:Paris\\, Madrid"+Environment.NewLine+
        //"BEGIN:STANDARD"+Environment.NewLine+
        //"TZOFFSETTO:+0100"+Environment.NewLine+
        //"TZOFFSETFROM:+0100"+Environment.NewLine+
        //"END:STANDARD"+Environment.NewLine+
        //"END:VTIMEZONE"+Environment.NewLine+



       //"URL:"+Const.DISTRICT_URL+Const.MEDIA_DOWNLOAD_URL + "?id=" + guidexport+Environment.NewLine+
        "END:VCALENDAR"+Environment.NewLine;

        // ical="BEGIN:VCALENDAR\r\nPRODID:-//SmarterTools SmarterMail//NONSGML ical.net//EN\r\nVERSION:2.0\r\nBEGIN:VEVENT\r\nCLASS:PUBLIC\r\nCREATED:20250623T091155Z\r\nDESCRIPTION:\r\nDTEND;TZID=Romance Standard Time:20250624T163000\r\nDTSTAMP:20250623T091155Z\r\nDTSTART;TZID=Romance Standard Time:20250624T153000\r\nLAST-MODIFIED:20250623T091155Z\r\nPRIORITY:5\r\nSEQUENCE:0\r\nSUMMARY:rdv Matthieu FOGERAN\\n\\nIngénieur Commercial\\n\\n \\n \t04 84 47 50 0\r\n 0\\n\\n \\n \t06 46 56 90 31\\n\\n\r\nTRANSP:OPAQUE\r\nUID:d2414bd9-1a87-428a-b92d-a1ae9002181d\r\nX-MICROSOFT-CDO-ALLDAYEVENT:FALSE\r\nX-MICROSOFT-CDO-BUSYSTATUS:BUSY\r\nBEGIN:VALARM\r\nACTION:DISPLAY\r\nDESCRIPTION:Reminder\r\nTRIGGER:-PT15M\r\nEND:VALARM\r\nEND:VEVENT\r\nBEGIN:VTIMEZONE\r\nTZID:Romance Standard Time\r\nBEGIN:STANDARD\r\nDTSTART:19701025T030000\r\nRRULE:FREQ=YEARLY;BYDAY=-1SU;BYHOUR=3;BYMINUTE=0;BYMONTH=10\r\nTZNAME:Paris\\, Madrid\r\nTZOFFSETFROM:+0200\r\nTZOFFSETTO:+0100\r\nEND:STANDARD\r\nBEGIN:DAYLIGHT\r\nDTSTART:19700329T020000\r\nRRULE:FREQ=YEARLY;BYDAY=-1SU;BYHOUR=2;BYMINUTE=0;BYMONTH=3\r\nTZNAME:Paris\\, Madrid (heure d’été)\r\nTZOFFSETFROM:+0100\r\nTZOFFSETTO:+0200\r\nEND:DAYLIGHT\r\nEND:VTIMEZONE\r\nEND:VCALENDAR\r\n";

        media.content = System.Text.Encoding.UTF8.GetBytes(ical);
        media.content_mime = "text/calendar; charset=utf-8";
        media.content_type = media.content_mime;
        media.content_size=media.content.Length;
        media.filename = ""+meeting.guid+".ics";
        media.name = media.filename;


        HttpContext.Current.Application[guidexport] = media;
        Response.Redirect(Const.DISTRICT_URL+Const.MEDIA_DOWNLOAD_URL + "?id=" + guidexport);
        return;
    }



}
<div class="row">
    <div class="col-sm-6">
        <h1>@meeting.name</h1>
        <h2>@club.name</h2>
        @{
            if (meeting.statutory == Const.YES)
            {
                <p><em>R&eacute;union statutaire</em></p>
            }
        }

    </div>
    <div class="col-sm-6 text-right">

        <img src="/DesktopModules/AIS/API/Meeting/getqr?link=@meeting.link" />
    </div>
</div>
<div class="row">
    <div class="col-sm-10">
        @{
            if (meeting.dtstart.ToShortDateString() != meeting.dtend.ToShortDateString())
            {

                <p>du @meeting.dtstart.ToShortDateString() - @meeting.dtstart.ToString("HH:mm")</p>
                <p>@meeting.dtend.ToShortDateString() - @meeting.dtend.ToString("HH:mm")</p>

            }
            else
            {
                <p>le @meeting.dtstart.ToShortDateString() de  @meeting.dtstart.ToString("HH:mm") &agrave;  @meeting.dtend.ToString("HH:mm")</p>

            }
        }
    </div>
    <div class="col-sm-2 text-right">
        @if ((Request["popup"] + "") != "")
        {
        }
        else
        {
            <script>
                function print() {
                    document.getElementById('printIframe').src = "/print?popup=true&url=@HttpUtility.UrlEncode(Functions.UrlAddParam(Request.RawUrl,"print","true"))";
                }
            </script>
            <a target="_blank" href="/oukikan?m=@link&export=true" class="btn btn-link" title="Imprimer"><i class="fa fa-table"></i> Export Excel</a>
            <a href="#" onclick="print()" class="btn btn-link" title="Imprimer"><i class="fa fa-print"></i> Imprimer</a>
            <a href="/oukikan?m=@link&calendar=true" class="btn btn-link" title="Ajouter au calendrier"><i class="fa fa-calendar"></i> Ajout Calendrier</a>
        }
    </div>

</div>
@if (!print)
{
    @RenderPage("BlocksContent/View.news.meeting.cshtml")



    <style>
        [v-cloak] {
            display: none;
        }
    </style>
    <div id='@PageData["appID"]' v-cloak>
        <div>
            <h3>Inscriptions</h3>
        </div>
        <table class="table">
            <tbody>
                <tr>
                    <th>
                        <span v-if="users.length>0">{{nbparticipants()}} participant<span v-if="nbparticipants()>1">s</span> </span>
                        <span v-if="users.length==0">Aucun inscrit</span>
                    </th>
                    <th>
                        pr&eacute;sence
                    </th>
                    <th>
                        <span v-if="users.length>0">Commentaire</span>
                    </th>
                    @if (!print)
                    {
                        <th>
                        </th>
                        <th>
                        </th>
                    }
                </tr>
                <tr v-for="u in users" :class="u.presence=='N'?'active':''">
                    <td>{{u.lastname}} {{u.firstname}}</td>
                    <td>{{u.presence=='N'?'Non':'Oui'}}</td>
                    <td><p v-if="u.comment"><em>{{u.comment}}</em></p></td>
                    @if (!print)
                    {
                        <td><button v-if="isCurrentUser(u) || isAdmin()" v-on:click="editUser(u)" type="button" class="btn btn-default">Modifier</button></td>
                        <td><button v-if="isCurrentUser(u) || isAdmin()" v-on:click="deleteUser(u)" type="button" class="btn btn-danger">Retirer</button></td>
                    }
                </tr>
            </tbody>
        </table>



        @if (meeting.active == Const.YES)
        {


            <div v-if="!user">
                <button v-if="isLoggedUser()" type="button" class="btn btn-success" v-on:click="addLoggedUser(true)">Je m'inscris</button>&nbsp;
                <button v-if="isLoggedUser()" type="button" class="btn btn-danger" v-on:click="addLoggedUser(false)">J'indique mon absence</button>&nbsp;
                <button type="button" class="btn btn-info" v-on:click="addNewUser()">Inscrire un participant</button>
            </div>

        }


        <div v-if="user" class="panel-group">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Inscription
                </div>
                <div class="panel-body">
                    <label>Nom</label> <input class="form-control" type="text" v-model="user.lastname" />
                    <label>Pr&eacute;nom</label> <input class="form-control" type="text" v-model="user.firstname" />
                    <label>Pr&eacute;sent(e)</label> <div class="checkbox-inline"><label class="checkbox-inline"><input type="radio" value="Y" v-model="user.presence" /> Oui</label><label class="checkbox-inline"><input type="radio" value="N" v-model="user.presence" /> Non</label></div><br /><br />
                    <label>Commentaire</label> <input class="form-control" type="text" v-model="user.comment" />
                    <button type="button" class="btn btn-default" v-on:click="this.user=null">Annuler</button>&nbsp;
                    <button v-if="isValid()" type="button" class="btn btn-primary" v-on:click="validNewUser()">Valider</button>
                </div>
            </div>

        </div>

    </div>


    <script src="@(libPath)vue/3.2.23/vue.js"></script>
    <script src="@(libPath)axios/0.24.0/axios.min.js"></script>
    <script src="@(libPath)toastr/toastr.min.js"></script>
    <link href="@(libPath)toastr/toastr.min.css" rel="stylesheet" />
    <script src="/DesktopModules/Yemon/API/Services/VueJS"></script>
    <script>
     function InitApp(appid, MODULEID, GUID, USERIDGUID) {
         const app = Vue.createApp({
             data() {
                 return {
                     moduleid: MODULEID,
                     meetingguid: GUID,
                     useridguid: USERIDGUID,
                     users: [],
                     user: null,
                     loggeduser: null
                 }
             },
             components: {

             },
             methods: {
                 nbparticipants() {
                     var nb = 0;
                     this.users.forEach(u => { if (u.presence == 'Y') nb++ });
                     return nb;
                 },

                 isValid() {
                     return this.user.firstname.trim() != '' && this.user.lastname.trim() != '';
                 },
                 getLoggedUser() {
                     _yemon[this.moduleid].service.getData('/GetLoggedUser',
                         {
                             useridguid: this.useridguid
                         },
                         (r) => {
                             if (r.data) {
                                 this.loggeduser = r.data;
                             }
                         },
                         (e) => { });

                 },
                 getUsers() {
                     _yemon[this.moduleid].service.getData('/GetUsers',
                         {
                             guid: this.meetingguid
                         },
                         (r) => {
                             this.users = r.data;
                         });

                 },
                 validNewUser() {
                     this.user.lastname = this.user.lastname.toUpperCase();
                     _yemon[this.moduleid].service.postData('/SetUser',
                         {
                             user: JSON.stringify(this.user)
                         },
                         (r) => {
                             this.getUsers();
                             this.user = null;
                         });
                 },
                 addNewUser() {
                     this.user = {
                         guid: _yemon[this.moduleid].service.guid(),
                         meetingguid: this.meetingguid,
                         useridguid: this.useridguid,
                         firstname: '',
                         lastname: '',
                         comment: '',
                         presence: 'Y'

                     }

                 },
                 isCurrentUser(u) {
                     if (this.useridguid == u.useridguid)
                         return true;
                     return false;
                 },
                 isAdmin() {
                      @{
                          if (userInfo.IsSuperUser ||
                               userInfo.IsInRole(Const.ADMIN_ROLE) ||
                               (userInfo.IsInRole(Const.ROLE_ADMIN_CLUB) &&
                               meeting.cric == Functions.CurrentCric))
                          {
                              @Html.Raw("return true");
                          }
                      }

                 },
                 editUser(u) {
                     this.user = JSON.parse(JSON.stringify(u));

                 },
                 addLoggedUser(presence) {
                     this.user = JSON.parse(JSON.stringify(this.loggeduser));
                     this.user.guid = _yemon[this.moduleid].service.guid();
                     this.user.meetingguid = this.meetingguid;
                     this.user.useridguid = this.useridguid;
                     this.user.presence = presence ? "Y" : "N";

                 },
                 isLoggedUser() {
                     let ok = this.loggeduser;
                     if (ok) {


                         for (let i = 0; i < this.users.length; i++) {
                             if (this.users[i].useridguid == this.useridguid) {
                                 return false;
                             }
                         }
                     }
                     return ok;
                 },
                 deleteUser(u) {
                     if (confirm("Retirer l'inscription ?")) {
                         _yemon[this.moduleid].service.getData('/DeleteUser',
                             {
                                 guid: u.guid,
                                 meetingguid: u.meetingguid
                             },
                             (r) => {
                                 this.getUsers();
                             });

                     }
                 }
             },
             mounted() {
                 this.getUsers();
                 this.getLoggedUser();
                 setInterval(() => {
                     this.getUsers()
                 }, 10000);
             }
         });
         app.mount('#' + appid);
     }
    </script>
    <script>
$(document).ready(function () {


    if (typeof _yemon == 'undefined')
        _yemon = [];
    _yemon[@PageData["moduleID"]] = new Yemon(@PageData["moduleID"], '/Desktopmodules/AIS/API/Meeting');
    InitApp('@PageData["appID"]',@PageData["moduleID"],'@meeting.guid','@useridguid');
});
    </script>

}
else
{
    List<Meeting.User> users = Yemon.dnn.DataMapping.ExecSql<Meeting.User>(new SqlCommand("SELECT * FROM ais_meetings_users WHERE meetingguid='" + meeting.guid + "' ORDER BY lastname,firstname"));
    int nbparticipants = users.Where(u => u.presence == "Y").Count();
    <div id='@PageData["appID"]' v-cloak>
        <div>
            <h3>Inscriptions</h3>
        </div>
        <table class="table">
            <tbody>
                <tr>
                    <th>
                        @if (nbparticipants > 0)
                        {
                            <span>@nbparticipants participant@(nbparticipants > 1?"s":"")</span>
                        }
                        else
                        {
                            <span>Aucun inscrit</span>
                        }
                    </th>
                    <th>
                        pr&eacute;sence
                    </th>
                    <th>
                        @if (nbparticipants > 0)
                        {
                            <span>Commentaire</span>
                        }
                    </th>
                </tr>
                @foreach (var user in users)
                {
                    <tr>
                        <td>@user.lastname @user.firstname</td>
                        <td>@(user.presence=="N"?"Non":"Oui")</td>
                        <td>
                            @if (user.comment != "")
                            {
                                <p><em>@user.comment</em></p>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<iframe id="printIframe" style="display:none"></iframe>