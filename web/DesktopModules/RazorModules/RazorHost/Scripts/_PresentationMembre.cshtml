@using System.Collections;
@using System.IO;
@using System.Collections.Generic;
@using System.Data.SqlClient;
@using DotNetNuke.Entities.Tabs;
@using System.Data;
@using System.Linq;
@using DotNetNuke.Common;
@using DotNetNuke.Entities.Users;
@using DotNetNuke.Web.Api;
@using DotNetNuke;
@using DotNetNuke.Services.Localization;
@using DotNetNuke.Entities.Modules;
@using DotNetNuke.Security.Permissions;
@using AIS
@using Yemon.dnn
@{
    string userid = "" + Request["userid"];
    int UserId = 0;
    int.TryParse(userid, out UserId);
    if (String.IsNullOrEmpty(userid) || UserId == 0)
    {
        <h1>Pr√©sentation introuvable...</h1>
        return;
    }

    Member member = AIS.DataMapping.GetMemberByUserID(UserId);
    if (member == null)
    {
        <h1>Membre introuvable ...</h1>
        return;
    }


    PageData["appID"] = "app" + Dnn.Module.ModuleID;
    PageData["PortalId"] = Dnn.Portal.PortalId;
    PageData["moduleID"] = Dnn.Module.ModuleID;
    PageData["HTML"] = Html;
    PageData["blocksSuffix"] = "membrepagepro:" + member.nim;


    List<Block> blocks = AIS.DataMapping.GetBlocksPagePro(member.nim);
    PageData["blocks"] = blocks;
    if (blocks.Count == 0 || !member.presentation)
    {
        <script>
          var m = document.getElementsByClassName('DnnModule-@Dnn.Module.ModuleID');
          if (m && m.length > 0) {
              m[0].style.display="none";
          }
        </script>
        return;

    }
    @RenderPage("BlocksContent/View.membrepagepro.cshtml")
}

